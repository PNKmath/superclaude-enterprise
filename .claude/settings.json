{
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"$CLAUDE_TOOL_INPUT\" | grep -q 'rm -rf'; then echo 'BLOCKED: Dangerous rm -rf command detected by SuperClaude Enterprise' >&2 && exit 2; fi",
            "timeout": 5
          }
        ]
      },
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command", 
            "command": "if echo \"$CLAUDE_FILE_PATH\" | grep -E '(\\.env|.*\\.key|.*\\.pem|secrets/.*|\\.git/.*)'; then echo 'BLOCKED: Access to sensitive files not allowed' >&2 && exit 2; fi",
            "timeout": 5
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"$CLAUDE_TOOL_INPUT\" | grep -q -- '--skip-validation'; then superclaude-enterprise check-veto security --command \"$CLAUDE_TOOL_INPUT\"; fi",
            "timeout": 10
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"$CLAUDE_FILE_PATH\" | grep -q '\\.py$'; then echo 'Auto-formatting Python files...' && black \"$CLAUDE_FILE_PATH\" 2>/dev/null && ruff check --fix \"$CLAUDE_FILE_PATH\" 2>/dev/null || true; fi",
            "timeout": 30
          }
        ]
      },
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"$CLAUDE_FILE_PATH\" | grep -E '\\.(ts|tsx|js|jsx)$'; then echo 'Auto-formatting TypeScript/JavaScript files...' && prettier --write \"$CLAUDE_FILE_PATH\" 2>/dev/null && eslint --fix \"$CLAUDE_FILE_PATH\" 2>/dev/null || true; fi",
            "timeout": 30
          }
        ]
      },
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"$CLAUDE_FILE_PATH\" | grep -E '^(src|tests)/.*\\.ts$'; then superclaude-enterprise conflict-check --files \"$CLAUDE_FILE_PATH\" --personas architect,performance & fi",
            "timeout": 15
          }
        ]
      },
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "if echo \"$CLAUDE_FILE_PATH\" | grep -E '\\.(test|spec)\\.(ts|js)$'; then npm test -- --findRelatedTests \"$CLAUDE_FILE_PATH\" 2>/dev/null || true; fi",
            "timeout": 60
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "superclaude-enterprise log-notification \"$CLAUDE_NOTIFICATION\"",
            "timeout": 5
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "superclaude-enterprise validate-completion --check-tests --check-lint",
            "timeout": 30
          }
        ]
      }
    ]
  }
}